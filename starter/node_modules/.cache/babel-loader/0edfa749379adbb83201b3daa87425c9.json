{"ast":null,"code":"var _jsxFileName = \"/Users/ivanbrown/git/react/myreads/starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport BookList from \"./BookList\";\nimport BookSearch from \"./BookSearch\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxSearchResults = 100;\n\nfunction App() {\n  _s();\n\n  const [books, setBooks] = useState([]);\n\n  const refreshData = async () => {\n    const res = await BooksAPI.getAll();\n    setBooks(res);\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const setShelf = (book, shelf) => {\n    const update = async () => {\n      await BooksAPI.update(book, shelf);\n      refreshData();\n    };\n\n    update();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(BookList, {\n        books: books,\n        setShelf: setShelf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/search\",\n      element: /*#__PURE__*/_jsxDEV(BookSearch, {\n        maxResults: maxSearchResults,\n        setShelf: setShelf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ivanbrown/git/react/myreads/starter/src/App.js"],"names":["BookList","BookSearch","Route","Routes","useEffect","useState","BooksAPI","maxSearchResults","App","books","setBooks","refreshData","res","getAll","setShelf","book","shelf","update"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;AAEA,MAAMC,gBAAgB,GAAG,GAAzB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,WAAW,GAAG,YAAY;AAC9B,UAAMC,GAAG,GAAG,MAAMN,QAAQ,CAACO,MAAT,EAAlB;AACEH,IAAAA,QAAQ,CAACE,GAAD,CAAR;AACH,GAHD;;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMG,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,UAAMC,MAAM,GAAG,YAAY;AACzB,YAAMX,QAAQ,CAACW,MAAT,CAAgBF,IAAhB,EAAsBC,KAAtB,CAAN;AAEAL,MAAAA,WAAW;AACZ,KAJD;;AAMAM,IAAAA,MAAM;AACP,GARD;;AASA,sBAEE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,OAAO,eAAE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAER,KAAjB;AAAwB,QAAA,QAAQ,EAAEK;AAAlC;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,OAAO,eAAE,QAAC,UAAD;AAAY,QAAA,UAAU,EAAEP,gBAAxB;AAA0C,QAAA,QAAQ,EAAEO;AAApD;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAOD;;GA5BQN,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport BookList from \"./BookList\";\nimport BookSearch from \"./BookSearch\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nconst maxSearchResults = 100;\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n\n  const refreshData = async () => {\n    const res = await BooksAPI.getAll(); \n      setBooks(res);\n  };\n  \n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const setShelf = (book, shelf) => {\n    const update = async () => {\n      await BooksAPI.update(book, shelf);\n      \n      refreshData();\n    };\n    \n    update();\n  };\n  return (\n\n    <Routes>\n      <Route exact path=\"/\" element={<BookList books={books} setShelf={setShelf}/>} />\n      <Route exact path=\"/search\" element={<BookSearch maxResults={maxSearchResults} setShelf={setShelf} />} />\n    </Routes>\n   );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}