{"ast":null,"code":"var _jsxFileName = \"/Users/ivanbrown/git/react/myreads/starter/src/App.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Book from \"./Book\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Bookshelf from \"./Bookshelf\";\nimport BookList from \"./BookList\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport BookSearch from \"./BookSearch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let navigate = useNavigate();\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    const getAllBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    };\n\n    getAllBooks();\n  }, []);\n\n  const GetBooks = shelf => books.filter(b => b.shelf === shelf);\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(BookList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/search\",\n      element: /*#__PURE__*/_jsxDEV(BookSearch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mw0zQRSw3AQdjBfzrj28+U/B/Fw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ivanbrown/git/react/myreads/starter/src/App.js"],"names":["useEffect","useState","Book","BooksAPI","Bookshelf","BookList","Route","Routes","useNavigate","BookSearch","App","navigate","showSearchPage","setShowSearchpage","books","setBooks","getAllBooks","res","getAll","GetBooks","shelf","filter","b"],"mappings":";;;AAAA;AACA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,WAAxB,QAA2C,kBAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAIC,QAAQ,GAAGH,WAAW,EAA1B;AACA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,WAAW,GAAG,YAAY;AAC9B,YAAMC,GAAG,GAAG,MAAMd,QAAQ,CAACe,MAAT,EAAlB;AACAH,MAAAA,QAAQ,CAACE,GAAD,CAAR;AACD,KAHD;;AAKAD,IAAAA,WAAW;AACZ,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMG,QAAQ,GAAIC,KAAD,IAAWN,KAAK,CAACO,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACF,KAAF,KAAYA,KAA9B,CAA5B;;AAEA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAtBQV,G;UACQF,W;;;KADRE,G;AAwBT,eAAeA,GAAf","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Book from \"./Book\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Bookshelf from \"./Bookshelf\";\nimport BookList from \"./BookList\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport BookSearch from \"./BookSearch\";\n\nfunction App() {\n  let navigate = useNavigate();\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [books, setBooks] = useState([]);\n\n  useEffect(() => {\n    const getAllBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    };\n\n    getAllBooks();\n  }, []);\n\n  const GetBooks = (shelf) => books.filter(b => b.shelf === shelf);\n\n  return (\n    <Routes>\n      <Route exact path=\"/\" element={<BookList />} />\n      <Route exact path=\"/search\" element={<BookSearch />} />\n    </Routes>\n   );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}