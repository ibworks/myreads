{"ast":null,"code":"var _jsxFileName = \"/Users/ivanbrown/git/react/myreads/starter/src/BookSearch.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport BooksGrid from \"./BooksGrid\";\nimport { search } from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookSearch = ({\n  books,\n  setShelf\n}) => {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n\n  const search = async () => {\n    const res = await search(query);\n    console.debug(\"Search\", {\n      query,\n      res\n    });\n    setResults(res);\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const getResults = () => {\n    if (query === '') return books;\n    return books.filter(b => b.title.contains(query) || b.authors.filter(a => a.includes(query)).length > 0 || b.isbn.includes(query));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        title: \"Go back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(BooksGrid, {\n        books: books,\n        setShelf: setShelf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookSearch, \"nfFCkWxd9oyjBdRn730zz5KxriU=\");\n\n_c = BookSearch;\nexport default BookSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookSearch\");","map":{"version":3,"sources":["/Users/ivanbrown/git/react/myreads/starter/src/BookSearch.js"],"names":["Link","useState","BooksGrid","search","BookSearch","books","setShelf","query","setQuery","results","setResults","res","console","debug","useEffect","refreshData","getResults","filter","b","title","contains","authors","a","includes","length","isbn"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,MAAT,QAAuB,YAAvB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAME,MAAM,GAAG,YAAY;AACzB,UAAMQ,GAAG,GAAG,MAAMR,MAAM,CAACI,KAAD,CAAxB;AACAK,IAAAA,OAAO,CAACC,KAAR,CAAc,QAAd,EAAwB;AAACN,MAAAA,KAAD;AAAQI,MAAAA;AAAR,KAAxB;AACAD,IAAAA,UAAU,CAACC,GAAD,CAAV;AACD,GAJD;;AAMAG,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIT,KAAK,KAAK,EAAd,EAAkB,OAAOF,KAAP;AAElB,WAAOA,KAAK,CAACY,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,QAAR,CAAiBb,KAAjB,KAA2BW,CAAC,CAACG,OAAF,CAAUJ,MAAV,CAAiBK,CAAC,IAAIA,CAAC,CAACC,QAAF,CAAWhB,KAAX,CAAtB,EAAyCiB,MAAzC,GAAkD,CAA7E,IAAkFN,CAAC,CAACO,IAAF,CAAOF,QAAP,CAAgBhB,KAAhB,CAApG,CAAP;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAsC,QAAA,KAAK,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEF,KAAlB;AAAyB,QAAA,QAAQ,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAlCD;;GAAMF,U;;KAAAA,U;AAoCN,eAAeA,UAAf","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport BooksGrid from \"./BooksGrid\";\nimport { search } from \"./BooksAPI\";\n\nconst BookSearch = ({books, setShelf}) => {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n\n  const search = async () => {\n    const res = await search(query);  \n    console.debug(\"Search\", {query, res});\n    setResults(res);\n  };\n  \n  useEffect(() => {\n    refreshData();\n  }, []);\n  const getResults = () => {\n    if (query === '') return books;\n\n    return books.filter(b => b.title.contains(query) || b.authors.filter(a => a.includes(query)).length > 0 || b.isbn.includes(query));\n  };\n\n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <Link to=\"/\" className=\"close-search\" title=\"Go back\" />\n        <div className=\"search-books-input-wrapper\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by title, author, or ISBN\"\n          />\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        <BooksGrid books={books} setShelf={setShelf}/>\n      </div>\n    </div>);\n}\n\nexport default BookSearch;\n"]},"metadata":{},"sourceType":"module"}